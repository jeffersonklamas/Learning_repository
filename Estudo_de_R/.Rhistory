preco <- c(16.92, 24.03, 7.61, 15.49, 11.77)
preco
View(preco)
View(preco)
source('~/Documentos/LearningFolder/EStudo_de_R/Aula_de_R_01.R', echo=TRUE)
preco <- c(16.92, 24.03, 7.61, 15.49, 11.77)
preco <- c(16.92, 24.03, 7.61, 15.49, 11.77)
View(preco)
produto <- c('M', 'M', 'O', 'P', 'P')
produto
produto <- factor(produto)
produto <- factor(produto)
produto
custo <- c(5.30, 6.95, 132.02, 0.50, 6.53)
View(custo)
custo
preco & custo
preco + custo
View(custo)
produto <- c('M', 'M', 'O', 'P', 'P')
produto
produto <- factor(produto)
produto
View(Custo,produto)
custo <- c(5.30, 6.95, 132.02, 0.50, 6.53)
View(custo,produto)
View(custo;produto)
str(custo)
str(produto)
str(preco)
produto <- c('M', 'M', 'O', 'P', 'P')
produto
str(produto)
produto <- factor(produto)
produto
lucro_obteve <- (TRUE, TRUE, FALSE, FALSE, TRUE)
lucro_obteve <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
sum(lucro_obteve)
# Date
# No R para que o mesmo possa identificar a data
datas <- as.Date('2020-05-15', '2020-05-16', '2020-05-17', '2020-05-18', '2020-05-19')
# Date
# No R para que o mesmo possa identificar a data
datas <- as.Date(c('2020-05-15', '2020-05-16', '2020-05-17', '2020-05-18', '2020-05-19'))
# Comparando dois vetores
custo > preco
# Comparando dois vetores
custo > preco > custo
# Comparando dois vetores
preco > custo
preco <- c(16.92, 24.03, 7.61, 1.49, 11.77)
custo <- c(5.30, 6.95, 132.02, 75.50, 6.53)
produto <- c('M', 'M', 'O', 'P', 'P')
produto <- factor(produto)
lucro_obteve <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
# Date
# No R para que o mesmo possa identificar a data inclua o comando as.Date com o D em maiúsculo
datas <- as.Date(c('2020-05-15', '2020-05-16', '2020-05-17', '2020-05-18', '2020-05-19'))
# Comparando dois vetores
preco > custo
## ```{r}
## isto é um chunk.
## ```
preco <- c(16.92, 24.03, 7.61, 1.49, 11.77)
## ```{r}
## isto é um chunk.
## ```
custo
# Comparando dois vetores
preco > custo
2*2-(4/4)/2
1+1 # adição
4-2 # Subtração
6*9 # Multiplicação
4/5 # Divisão
4/2 # Divisão
3^2 # Potência
4 %% 2 # resto da divisão de 4 por 2
5 %% 2 # resto da divisão de 4 por 2
15 %% 2 # resto da divisão de 4 por 2
60 %% 2 # resto da divisão de 4 por 2
1060 %% 2 # resto da divisão de 4 por 2
1060 %% 3 # resto da divisão de 4 por 2
1751 %% 3 # resto da divisão de 4 por 2
1751 %/% 3 # Parte inteira da divisão de 1751 por 3
1751 %% 3 # Resto da divisão de 1751 por 3
1751 %/% 3 # Parte inteira da divisão de 1751 por 3
install.packages('dynln')
install.packages('dynlm')
library(dynlm)
#ou
require(rpart)
#ou
require(rpart)
library(adagio)
detach("package:adagio", unload = TRUE)
# As vezes pode ocorrer algum erro, tente
install.packages('dynlm' . depencies = true)
install.packages('dynlm' . depencies = true)
install.packages('dynlm' . dependencies = true)
# As vezes pode ocorrer algum erro, tente
install.packages('dynlm' , dependencies = true)
install.packages('dynlm' , dependencies = true)
install.packages("dynlm", dependencies = true)
# As vezes pode ocorrer algum erro, tente
install.packages('dynlm' , dependencies = t)
library(dynlm)
#ou
require(rpart)
library(readxl)
BD_marcas_de_chocolate <- read_excel("~/Documentos/Aula_Marketing_Analytics_Estatidados/BD_marcas_de_chocolate.xlsx",
sheet = "Plan1")
View(BD_marcas_de_chocolate)
lucro_obteve <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
sum(lucro_obteve)
preco <- c(16.92, 24.03, 7.61, 1.49, 11.77)
View(preco)
preco <- c(16.92, 24.03, 7.61, 1.49, 11.77)
View(preco)
